E	<h3 id="impl" class="impl" style="display: flex;"><code class="in-band">impl&lt;K:&nbsp;<a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>, V&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, <a class="struct" href="../../std/collections/hash_map/struct.RandomState.html" title="struct std::collections::hash_map::RandomState">RandomState</a>&gt;</code><a href="#impl" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#211-245" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	new	new	ðŸ›ˆ	<h4 id="method.new" class="method"><code id="new.v">pub fn <a href="#method.new" class="fnname">new</a>() -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, <a class="struct" href="../../std/collections/hash_map/struct.RandomState.html" title="struct std::collections::hash_map::RandomState">RandomState</a>&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#225-227" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl" class="impl" style="display: flex;"><code class="in-band">impl&lt;K:&nbsp;<a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>, V&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, <a class="struct" href="../../std/collections/hash_map/struct.RandomState.html" title="struct std::collections::hash_map::RandomState">RandomState</a>&gt;</code><a href="#impl" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#211-245" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	with_capacity	with_capacity	ðŸ›ˆ	<h4 id="method.with_capacity" class="method"><code id="with_capacity.v">pub fn <a href="#method.with_capacity" class="fnname">with_capacity</a>(capacity: <a class="primitive" href="../primitive.usize.html">usize</a>) -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, <a class="struct" href="../../std/collections/hash_map/struct.RandomState.html" title="struct std::collections::hash_map::RandomState">RandomState</a>&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#242-244" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl" class="impl" style="display: flex;"><code class="in-band">impl&lt;K:&nbsp;<a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>, V&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, <a class="struct" href="../../std/collections/hash_map/struct.RandomState.html" title="struct std::collections::hash_map::RandomState">RandomState</a>&gt;</code><a href="#impl" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#211-245" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	capacity	capacity		<h4 id="method.capacity" class="method"><code id="capacity.v">pub fn <a href="#method.capacity" class="fnname">capacity</a>(&amp;self) -&gt; <a class="primitive" href="../primitive.usize.html">usize</a></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#262-264" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	clear	clear		<h4 id="method.clear" class="method"><code id="clear.v">pub fn <a href="#method.clear" class="fnname">clear</a>(&amp;mut self)</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#462-464" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	drain	drain		<h4 id="method.drain" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Drain.html" title="struct std::collections::hash_map::Drain">Drain</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Drain.html" title="struct std::collections::hash_map::Drain">Drain</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.Drain.html" title="struct std::collections::hash_map::Drain">Drain</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>;</span></code></div></div><code id="drain.v">pub fn <a href="#method.drain" class="fnname">drain</a>(&amp;mut self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.Drain.html" title="struct std::collections::hash_map::Drain">Drain</a>&lt;K, V&gt;</code><span class="since" title="Stable since Rust version 1.6.0">1.6.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#443-445" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	is_empty	is_empty		<h4 id="method.is_empty" class="method"><code id="is_empty.v">pub fn <a href="#method.is_empty" class="fnname">is_empty</a>(&amp;self) -&gt; <a class="primitive" href="../primitive.bool.html">bool</a></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#418-420" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	iter	iter		<h4 id="method.iter" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a </a>V<a class="primitive" href="../primitive.tuple.html">)</a>;</span></code></div></div><code id="iter.v">pub fn <a href="#method.iter" class="fnname">iter</a>(&amp;self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#355-357" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	iter_mut	iter_mut		<h4 id="method.iter_mut" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a mut </a>V<a class="primitive" href="../primitive.tuple.html">)</a>;</span></code></div></div><code id="iter_mut.v">pub fn <a href="#method.iter_mut" class="fnname">iter_mut</a>(&amp;mut self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#383-385" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	keys	keys		<h4 id="method.keys" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Keys.html" title="struct std::collections::hash_map::Keys">Keys</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Keys.html" title="struct std::collections::hash_map::Keys">Keys</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.Keys.html" title="struct std::collections::hash_map::Keys">Keys</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.reference.html">&amp;'a </a>K;</span></code></div></div><code id="keys.v">pub fn <a href="#method.keys" class="fnname">keys</a>(&amp;self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.Keys.html" title="struct std::collections::hash_map::Keys">Keys</a>&lt;K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#284-286" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	len	len		<h4 id="method.len" class="method"><code id="len.v">pub fn <a href="#method.len" class="fnname">len</a>(&amp;self) -&gt; <a class="primitive" href="../primitive.usize.html">usize</a></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#400-402" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	values	values		<h4 id="method.values" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Values.html" title="struct std::collections::hash_map::Values">Values</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Values.html" title="struct std::collections::hash_map::Values">Values</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.Values.html" title="struct std::collections::hash_map::Values">Values</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.reference.html">&amp;'a </a>V;</span></code></div></div><code id="values.v">pub fn <a href="#method.values" class="fnname">values</a>(&amp;self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.Values.html" title="struct std::collections::hash_map::Values">Values</a>&lt;K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#306-308" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	values_mut	values_mut		<h4 id="method.values_mut" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.ValuesMut.html" title="struct std::collections::hash_map::ValuesMut">ValuesMut</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.ValuesMut.html" title="struct std::collections::hash_map::ValuesMut">ValuesMut</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.ValuesMut.html" title="struct std::collections::hash_map::ValuesMut">ValuesMut</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.reference.html">&amp;'a mut </a>V;</span></code></div></div><code id="values_mut.v">pub fn <a href="#method.values_mut" class="fnname">values_mut</a>(&amp;mut self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.ValuesMut.html" title="struct std::collections::hash_map::ValuesMut">ValuesMut</a>&lt;K, V&gt;</code><span class="since" title="Stable since Rust version 1.10.0">1.10.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#333-335" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-1" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#247-465" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	contains_key	contains_key	ðŸ›ˆ	<h4 id="method.contains_key" class="method"><code id="contains_key.v">pub fn <a href="#method.contains_key" class="fnname">contains_key</a>&lt;Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt;(&amp;self, k: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="primitive" href="../primitive.bool.html">bool</a> <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>,&nbsp;</span></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#756-762" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	entry	entry	ðŸ›ˆ	<h4 id="method.entry" class="method"><code id="entry.v">pub fn <a href="#method.entry" class="fnname">entry</a>(&amp;mut self, key: K) -&gt; <a class="enum" href="../../std/collections/hash_map/enum.Entry.html" title="enum std::collections::hash_map::Entry">Entry</a>&lt;K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#672-674" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	get	get	ðŸ›ˆ	<h4 id="method.get" class="method"><code id="get.v">pub fn <a href="#method.get" class="fnname">get</a>&lt;Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt;(&amp;self, k: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="enum" href="../../std/option/enum.Option.html" title="enum std::option::Option">Option</a>&lt;<a class="primitive" href="../primitive.reference.html">&amp;</a>V&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>,&nbsp;</span></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#697-703" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	get_key_value	get_key_value	ðŸ›ˆ	<h4 id="method.get_key_value" class="method"><code id="get_key_value.v">pub fn <a href="#method.get_key_value" class="fnname">get_key_value</a>&lt;Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt;(&amp;self, k: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="enum" href="../../std/option/enum.Option.html" title="enum std::option::Option">Option</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;</a>K, <a class="primitive" href="../primitive.reference.html">&amp;</a>V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>,&nbsp;</span></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#727-733" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	get_mut	get_mut	ðŸ›ˆ	<h4 id="method.get_mut" class="method"><code id="get_mut.v">pub fn <a href="#method.get_mut" class="fnname">get_mut</a>&lt;Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt;(&amp;mut self, k: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="enum" href="../../std/option/enum.Option.html" title="enum std::option::Option">Option</a>&lt;<a class="primitive" href="../primitive.reference.html">&amp;mut </a>V&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>,&nbsp;</span></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#787-793" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	hasher	hasher	ðŸ›ˆ	<h4 id="method.hasher" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</h3><code class="content"><span class="where fmt-newline">impl&lt;'_, F&gt; <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F <span class="where fmt-newline">where<br>&nbsp;F: <a class="trait" href="../../std/marker/trait.Unpin.html" title="trait std::marker::Unpin">Unpin</a> + <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/future/trait.Future.html#associatedtype.Output" class="type">Output</a> = &lt;F as <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a>&gt;::<a class="type" href="../../std/future/trait.Future.html#associatedtype.Output" title="type std::future::Future::Output">Output</a>;</span><span class="where fmt-newline">impl&lt;'_, I&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>I <span class="where fmt-newline">where<br>&nbsp;I: <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = &lt;I as <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a>&gt;::<a class="type" href="../../std/iter/trait.Iterator.html#associatedtype.Item" title="type std::iter::Iterator::Item">Item</a>;</span><span class="where fmt-newline">impl&lt;'_, R:&nbsp;<a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>R</span><span class="where fmt-newline">impl&lt;'_, W:&nbsp;<a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>W</span></code></div></div><code id="hasher.v">pub fn <a href="#method.hasher" class="fnname">hasher</a>(&amp;self) -&gt; <a class="primitive" href="../primitive.reference.html">&amp;</a>S</code><span class="since" title="Stable since Rust version 1.9.0">1.9.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#545-547" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	insert	insert	ðŸ›ˆ	<h4 id="method.insert" class="method"><code id="insert.v">pub fn <a href="#method.insert" class="fnname">insert</a>(&amp;mut self, k: K, v: V) -&gt; <a class="enum" href="../../std/option/enum.Option.html" title="enum std::option::Option">Option</a>&lt;V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#822-824" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	remove	remove	ðŸ›ˆ	<h4 id="method.remove" class="method"><code id="remove.v">pub fn <a href="#method.remove" class="fnname">remove</a>&lt;Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt;(&amp;mut self, k: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="enum" href="../../std/option/enum.Option.html" title="enum std::option::Option">Option</a>&lt;V&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>,&nbsp;</span></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#848-854" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	remove_entry	remove_entry	ðŸ›ˆ	<h4 id="method.remove_entry" class="method"><code id="remove_entry.v">pub fn <a href="#method.remove_entry" class="fnname">remove_entry</a>&lt;Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt;(&amp;mut self, k: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="enum" href="../../std/option/enum.Option.html" title="enum std::option::Option">Option</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a>,&nbsp;</span></code><span class="since" title="Stable since Rust version 1.27.0">1.27.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#880-886" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	reserve	reserve	ðŸ›ˆ	<h4 id="method.reserve" class="method"><code id="reserve.v">pub fn <a href="#method.reserve" class="fnname">reserve</a>(&amp;mut self, additional: <a class="primitive" href="../primitive.usize.html">usize</a>)</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#568-570" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	retain	retain	ðŸ›ˆ	<h4 id="method.retain" class="method"><code id="retain.v">pub fn <a href="#method.retain" class="fnname">retain</a>&lt;F&gt;(&amp;mut self, f: F) <span class="where fmt-newline">where<br>&nbsp;F: <a class="trait" href="../../std/ops/trait.FnMut.html" title="trait std::ops::FnMut">FnMut</a>(<a class="primitive" href="../primitive.reference.html">&amp;</a>K, <a class="primitive" href="../primitive.reference.html">&amp;mut </a>V) -&gt; <a class="primitive" href="../primitive.bool.html">bool</a>,&nbsp;</span></code><span class="since" title="Stable since Rust version 1.18.0">1.18.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#903-908" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	shrink_to	shrink_to	ðŸ›ˆ	<h4 id="method.shrink_to" class="method"><code id="shrink_to.v">pub fn <a href="#method.shrink_to" class="fnname">shrink_to</a>(&amp;mut self, min_capacity: <a class="primitive" href="../primitive.usize.html">usize</a>)</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#643-649" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	shrink_to_fit	shrink_to_fit	ðŸ›ˆ	<h4 id="method.shrink_to_fit" class="method"><code id="shrink_to_fit.v">pub fn <a href="#method.shrink_to_fit" class="fnname">shrink_to_fit</a>(&amp;mut self)</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#615-617" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	try_reserve	try_reserve	ðŸ›ˆ	<h4 id="method.try_reserve" class="method"><code id="try_reserve.v">pub fn <a href="#method.try_reserve" class="fnname">try_reserve</a>(&amp;mut self, additional: <a class="primitive" href="../primitive.usize.html">usize</a>) -&gt; <a class="enum" href="../../std/result/enum.Result.html" title="enum std::result::Result">Result</a>&lt;<a class="primitive" href="../primitive.unit.html">()</a>, <a class="enum" href="../../std/collections/enum.TryReserveError.html" title="enum std::collections::TryReserveError">TryReserveError</a>&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#591-595" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	with_capacity_and_hasher	with_capacity_and_hasher	ðŸ›ˆ	<h4 id="method.with_capacity_and_hasher" class="method"><code id="with_capacity_and_hasher.v">pub fn <a href="#method.with_capacity_and_hasher" class="fnname">with_capacity_and_hasher</a>(<br>&nbsp;capacity: <a class="primitive" href="../primitive.usize.html">usize</a>, <br>&nbsp;hash_builder: S<br>) -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><span class="since" title="Stable since Rust version 1.7.0">1.7.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#523-527" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	with_hasher	with_hasher	ðŸ›ˆ	<h4 id="method.with_hasher" class="method"><code id="with_hasher.v">pub fn <a href="#method.with_hasher" class="fnname">with_hasher</a>(hash_builder: S) -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><span class="since" title="Stable since Rust version 1.7.0">1.7.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#494-498" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#467-909" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-3" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-3" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#911-972" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	raw_entry	raw_entry	ðŸ›ˆ	<h4 id="method.raw_entry" class="method"><code id="raw_entry.v">pub fn <a href="#method.raw_entry" class="fnname">raw_entry</a>(&amp;self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.RawEntryBuilder.html" title="struct std::collections::hash_map::RawEntryBuilder">RawEntryBuilder</a>&lt;K, V, S&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#969-971" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-3" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-3" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#911-972" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	raw_entry_mut	raw_entry_mut	ðŸ›ˆ	<h4 id="method.raw_entry_mut" class="method"><code id="raw_entry_mut.v">pub fn <a href="#method.raw_entry_mut" class="fnname">raw_entry_mut</a>(&amp;mut self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.RawEntryBuilderMut.html" title="struct std::collections::hash_map::RawEntryBuilderMut">RawEntryBuilderMut</a>&lt;K, V, S&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#948-950" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-3" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-3" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#911-972" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Any" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/any/trait.Any.html" title="trait std::any::Any">Any</a> for T <span class="where fmt-newline">where<br>&nbsp;T: 'static + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></code><a href="#impl-Any" class="anchor"></a><a class="srclink" href="../../src/core/any.rs.html#100-102" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	type_id	type_id	AnyðŸ›ˆ	<h4 id="method.type_id" class="method x"><code id="type_id.v">fn <a href="../../std/any/trait.Any.html#tymethod.type_id" class="fnname">type_id</a>(&amp;self) -&gt; <a class="struct" href="../../std/any/struct.TypeId.html" title="struct std::any::TypeId">TypeId</a></code><a class="srclink" href="../../src/core/any.rs.html#101" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Any" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/any/trait.Any.html" title="trait std::any::Any">Any</a> for T <span class="where fmt-newline">where<br>&nbsp;T: 'static + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></code><a href="#impl-Any" class="anchor"></a><a class="srclink" href="../../src/core/any.rs.html#100-102" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Borrow%3CT%3E" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;T&gt; for T <span class="where fmt-newline">where<br>&nbsp;T: ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></code><a href="#impl-Borrow%3CT%3E" class="anchor"></a><a class="srclink" href="../../src/core/borrow.rs.html#213-215" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	borrow	borrow	Borrow<â€¦> ðŸ›ˆ	<h4 id="method.borrow" class="method x"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</h3><code class="content"><span class="where fmt-newline">impl&lt;'_, F&gt; <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F <span class="where fmt-newline">where<br>&nbsp;F: <a class="trait" href="../../std/marker/trait.Unpin.html" title="trait std::marker::Unpin">Unpin</a> + <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/future/trait.Future.html#associatedtype.Output" class="type">Output</a> = &lt;F as <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a>&gt;::<a class="type" href="../../std/future/trait.Future.html#associatedtype.Output" title="type std::future::Future::Output">Output</a>;</span><span class="where fmt-newline">impl&lt;'_, I&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>I <span class="where fmt-newline">where<br>&nbsp;I: <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = &lt;I as <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a>&gt;::<a class="type" href="../../std/iter/trait.Iterator.html#associatedtype.Item" title="type std::iter::Iterator::Item">Item</a>;</span><span class="where fmt-newline">impl&lt;'_, R:&nbsp;<a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>R</span><span class="where fmt-newline">impl&lt;'_, W:&nbsp;<a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>W</span></code></div></div><code id="borrow.v">fn <a href="../../std/borrow/trait.Borrow.html#tymethod.borrow" class="fnname">borrow</a>(&amp;self) -&gt; <a class="primitive" href="../primitive.reference.html">&amp;</a>T</code><a class="srclink" href="../../src/core/borrow.rs.html#214" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Borrow%3CT%3E" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;T&gt; for T <span class="where fmt-newline">where<br>&nbsp;T: ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></code><a href="#impl-Borrow%3CT%3E" class="anchor"></a><a class="srclink" href="../../src/core/borrow.rs.html#213-215" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-BorrowMut%3CT%3E" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.BorrowMut.html" title="trait std::borrow::BorrowMut">BorrowMut</a>&lt;T&gt; for T <span class="where fmt-newline">where<br>&nbsp;T: ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></code><a href="#impl-BorrowMut%3CT%3E" class="anchor"></a><a class="srclink" href="../../src/core/borrow.rs.html#218-220" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	borrow_mut	borrow_mut	BorrowMut<â€¦> ðŸ›ˆ	<h4 id="method.borrow_mut" class="method x"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</h3><code class="content"><span class="where fmt-newline">impl&lt;'_, F&gt; <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F <span class="where fmt-newline">where<br>&nbsp;F: <a class="trait" href="../../std/marker/trait.Unpin.html" title="trait std::marker::Unpin">Unpin</a> + <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/future/trait.Future.html#associatedtype.Output" class="type">Output</a> = &lt;F as <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a>&gt;::<a class="type" href="../../std/future/trait.Future.html#associatedtype.Output" title="type std::future::Future::Output">Output</a>;</span><span class="where fmt-newline">impl&lt;'_, I&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>I <span class="where fmt-newline">where<br>&nbsp;I: <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = &lt;I as <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a>&gt;::<a class="type" href="../../std/iter/trait.Iterator.html#associatedtype.Item" title="type std::iter::Iterator::Item">Item</a>;</span><span class="where fmt-newline">impl&lt;'_, R:&nbsp;<a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>R</span><span class="where fmt-newline">impl&lt;'_, W:&nbsp;<a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>W</span></code></div></div><code id="borrow_mut.v">fn <a href="../../std/borrow/trait.BorrowMut.html#tymethod.borrow_mut" class="fnname">borrow_mut</a>(&amp;mut self) -&gt; <a class="primitive" href="../primitive.reference.html">&amp;mut </a>T</code><a class="srclink" href="../../src/core/borrow.rs.html#219" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-BorrowMut%3CT%3E" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.BorrowMut.html" title="trait std::borrow::BorrowMut">BorrowMut</a>&lt;T&gt; for T <span class="where fmt-newline">where<br>&nbsp;T: ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></code><a href="#impl-BorrowMut%3CT%3E" class="anchor"></a><a class="srclink" href="../../src/core/borrow.rs.html#218-220" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Clone" class="impl"><code class="in-band">impl&lt;K:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>, V:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>, S:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>&gt; <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-Clone" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#205" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	clone	clone	Clone ðŸ›ˆ	<h4 id="method.clone" class="method x"><code id="clone.v">fn <a href="../../std/clone/trait.Clone.html#tymethod.clone" class="fnname">clone</a>(&amp;self) -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#205" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Clone" class="impl"><code class="in-band">impl&lt;K:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>, V:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>, S:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>&gt; <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-Clone" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#205" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	clone_from	clone_from	Clone ðŸ›ˆ	<h4 id="method.clone_from" class="method x"><code id="clone_from.v">fn <a href="../../std/clone/trait.Clone.html#method.clone_from" class="fnname">clone_from</a>(&amp;mut self, source: <a class="primitive" href="../primitive.reference.html">&amp;</a>Self)</code><a class="srclink" href="../../src/core/clone.rs.html#131-133" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Clone" class="impl"><code class="in-band">impl&lt;K:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>, V:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>, S:&nbsp;<a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>&gt; <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-Clone" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#205" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Debug" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/fmt/trait.Debug.html" title="trait std::fmt::Debug">Debug</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/fmt/trait.Debug.html" title="trait std::fmt::Debug">Debug</a>,<br>&nbsp;V: <a class="trait" href="../../std/fmt/trait.Debug.html" title="trait std::fmt::Debug">Debug</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Debug" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1001-1010" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	fmt	fmt	Debug ðŸ›ˆ	<h4 id="method.fmt" class="method x"><code id="fmt.v">fn <a href="../../std/fmt/trait.Debug.html#tymethod.fmt" class="fnname">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="../../std/fmt/struct.Formatter.html" title="struct std::fmt::Formatter">Formatter</a>) -&gt; <a class="type" href="../../std/fmt/type.Result.html" title="type std::fmt::Result">Result</a></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1007-1009" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Debug" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/fmt/trait.Debug.html" title="trait std::fmt::Debug">Debug</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/fmt/trait.Debug.html" title="trait std::fmt::Debug">Debug</a>,<br>&nbsp;V: <a class="trait" href="../../std/fmt/trait.Debug.html" title="trait std::fmt::Debug">Debug</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Debug" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1001-1010" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Default" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/default/trait.Default.html" title="trait std::default::Default">Default</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a> + <a class="trait" href="../../std/default/trait.Default.html" title="trait std::default::Default">Default</a>,&nbsp;</span></code><a href="#impl-Default" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1013-1023" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	default	default	Default ðŸ›ˆ	<h4 id="method.default" class="method"><code id="default.v">fn <a href="../../std/default/trait.Default.html#tymethod.default" class="fnname">default</a>() -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1020-1022" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Default" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/default/trait.Default.html" title="trait std::default::Default">Default</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a> + <a class="trait" href="../../std/default/trait.Default.html" title="trait std::default::Default">Default</a>,&nbsp;</span></code><a href="#impl-Default" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1013-1023" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Extend%3C(%26%27a%20K%2C%20%26%27a%20V)%3E" class="impl"><code class="in-band">impl&lt;'a, K, V, S&gt; <a class="trait" href="../../std/iter/trait.Extend.html" title="trait std::iter::Extend">Extend</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a </a>V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/marker/trait.Copy.html" title="trait std::marker::Copy">Copy</a>,<br>&nbsp;V: <a class="trait" href="../../std/marker/trait.Copy.html" title="trait std::marker::Copy">Copy</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Extend%3C(%26%27a%20K%2C%20%26%27a%20V)%3E" class="anchor"></a><span class="since" title="Stable since Rust version 1.4.0">1.4.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2384-2394" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	extend	extend	Extend<â€¦> ðŸ›ˆ	<h4 id="method.extend-1" class="method x"><code id="extend.v-1">fn <a href="../../std/iter/trait.Extend.html#tymethod.extend" class="fnname">extend</a>&lt;T:&nbsp;<a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a>&lt;Item = <a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a </a>V<a class="primitive" href="../primitive.tuple.html">)</a>&gt;&gt;(&amp;mut self, iter: T)</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2391-2393" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Extend%3C(%26%27a%20K%2C%20%26%27a%20V)%3E" class="impl"><code class="in-band">impl&lt;'a, K, V, S&gt; <a class="trait" href="../../std/iter/trait.Extend.html" title="trait std::iter::Extend">Extend</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a </a>V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/marker/trait.Copy.html" title="trait std::marker::Copy">Copy</a>,<br>&nbsp;V: <a class="trait" href="../../std/marker/trait.Copy.html" title="trait std::marker::Copy">Copy</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Extend%3C(%26%27a%20K%2C%20%26%27a%20V)%3E" class="anchor"></a><span class="since" title="Stable since Rust version 1.4.0">1.4.0</span><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2384-2394" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Extend%3C(K%2C%20V)%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/iter/trait.Extend.html" title="trait std::iter::Extend">Extend</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Extend%3C(K%2C%20V)%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2372-2381" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	extend	extend	Extend<â€¦> ðŸ›ˆ	<h4 id="method.extend" class="method x"><code id="extend.v">fn <a href="../../std/iter/trait.Extend.html#tymethod.extend" class="fnname">extend</a>&lt;T:&nbsp;<a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a>&lt;Item = <a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt;&gt;(&amp;mut self, iter: T)</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2378-2380" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Extend%3C(K%2C%20V)%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/iter/trait.Extend.html" title="trait std::iter::Extend">Extend</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Extend%3C(K%2C%20V)%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2372-2381" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-From%3CT%3E" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/convert/trait.From.html" title="trait std::convert::From">From</a>&lt;T&gt; for T</code><a href="#impl-From%3CT%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#552-554" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	from	from	From<â€¦> ðŸ›ˆ	<h4 id="method.from" class="method x"><code id="from.v">fn <a href="../../std/convert/trait.From.html#tymethod.from" class="fnname">from</a>(t: T) -&gt; T</code><a class="srclink" href="../../src/core/convert.rs.html#553" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-From%3CT%3E" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/convert/trait.From.html" title="trait std::convert::From">From</a>&lt;T&gt; for T</code><a href="#impl-From%3CT%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#552-554" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-FromIterator%3C(K%2C%20V)%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/iter/trait.FromIterator.html" title="trait std::iter::FromIterator">FromIterator</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a> + <a class="trait" href="../../std/default/trait.Default.html" title="trait std::default::Default">Default</a>,&nbsp;</span></code><a href="#impl-FromIterator%3C(K%2C%20V)%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2359-2369" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	from_iter	from_iter	FromIterator<â€¦> ðŸ›ˆ	<h4 id="method.from_iter" class="method x"><code id="from_iter.v">fn <a href="../../std/iter/trait.FromIterator.html#tymethod.from_iter" class="fnname">from_iter</a>&lt;T:&nbsp;<a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a>&lt;Item = <a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt;&gt;(iter: T) -&gt; <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2364-2368" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-FromIterator%3C(K%2C%20V)%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/iter/trait.FromIterator.html" title="trait std::iter::FromIterator">FromIterator</a>&lt;<a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a> + <a class="trait" href="../../std/default/trait.Default.html" title="trait std::default::Default">Default</a>,&nbsp;</span></code><a href="#impl-FromIterator%3C(K%2C%20V)%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#2359-2369" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Index%3C%26%27_%20Q%3E" class="impl"><code class="in-band">impl&lt;'_, K, Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>, V, S&gt; <a class="trait" href="../../std/ops/trait.Index.html" title="trait std::ops::Index">Index</a>&lt;<a class="primitive" href="../primitive.reference.html">&amp;'_ </a>Q&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Index%3C%26%27_%20Q%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1026-1043" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	index	index	Index<â€¦> ðŸ›ˆ	<h4 id="method.index" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F</h3><code class="content"><span class="where fmt-newline">impl&lt;'_, F&gt; <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>F <span class="where fmt-newline">where<br>&nbsp;F: <a class="trait" href="../../std/marker/trait.Unpin.html" title="trait std::marker::Unpin">Unpin</a> + <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/future/trait.Future.html#associatedtype.Output" class="type">Output</a> = &lt;F as <a class="trait" href="../../std/future/trait.Future.html" title="trait std::future::Future">Future</a>&gt;::<a class="type" href="../../std/future/trait.Future.html#associatedtype.Output" title="type std::future::Future::Output">Output</a>;</span><span class="where fmt-newline">impl&lt;'_, I&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>I <span class="where fmt-newline">where<br>&nbsp;I: <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>,&nbsp;</span></span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = &lt;I as <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a>&gt;::<a class="type" href="../../std/iter/trait.Iterator.html#associatedtype.Item" title="type std::iter::Iterator::Item">Item</a>;</span><span class="where fmt-newline">impl&lt;'_, R:&nbsp;<a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>R</span><span class="where fmt-newline">impl&lt;'_, W:&nbsp;<a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> + ?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>&gt; <a class="trait" href="../../std/io/trait.Write.html" title="trait std::io::Write">Write</a> for <a class="primitive" href="../primitive.reference.html">&amp;'_ mut </a>W</span></code></div></div><code id="index.v">fn <a href="../../std/ops/trait.Index.html#tymethod.index" class="fnname">index</a>(&amp;self, key: <a class="primitive" href="../primitive.reference.html">&amp;</a>Q) -&gt; <a class="primitive" href="../primitive.reference.html">&amp;</a>V</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1040-1042" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Index%3C%26%27_%20Q%3E" class="impl"><code class="in-band">impl&lt;'_, K, Q:&nbsp;?<a class="trait" href="../../std/marker/trait.Sized.html" title="trait std::marker::Sized">Sized</a>, V, S&gt; <a class="trait" href="../../std/ops/trait.Index.html" title="trait std::ops::Index">Index</a>&lt;<a class="primitive" href="../primitive.reference.html">&amp;'_ </a>Q&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a> + <a class="trait" href="../../std/borrow/trait.Borrow.html" title="trait std::borrow::Borrow">Borrow</a>&lt;Q&gt;,<br>&nbsp;Q: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-Index%3C%26%27_%20Q%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1026-1043" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-Into%3CU%3E" class="impl"><code class="in-band">impl&lt;T, U&gt; <a class="trait" href="../../std/convert/trait.Into.html" title="trait std::convert::Into">Into</a>&lt;U&gt; for T <span class="where fmt-newline">where<br>&nbsp;U: <a class="trait" href="../../std/convert/trait.From.html" title="trait std::convert::From">From</a>&lt;T&gt;,&nbsp;</span></code><a href="#impl-Into%3CU%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#543-548" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	into	into	Into<â€¦> ðŸ›ˆ	<h4 id="method.into" class="method x"><code id="into.v">fn <a href="../../std/convert/trait.Into.html#tymethod.into" class="fnname">into</a>(self) -&gt; U</code><a class="srclink" href="../../src/core/convert.rs.html#545-547" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-Into%3CU%3E" class="impl"><code class="in-band">impl&lt;T, U&gt; <a class="trait" href="../../std/convert/trait.Into.html" title="trait std::convert::Into">Into</a>&lt;U&gt; for T <span class="where fmt-newline">where<br>&nbsp;U: <a class="trait" href="../../std/convert/trait.From.html" title="trait std::convert::From">From</a>&lt;T&gt;,&nbsp;</span></code><a href="#impl-Into%3CU%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#543-548" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-IntoIterator" class="impl"><code class="in-band">impl&lt;'a, K, V, S&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for &amp;'a <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-IntoIterator" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1683-1691" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	into_iter	into_iter	IntoIter<â€¦> ðŸ›ˆ	<h4 id="method.into_iter" class="method x"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a </a>V<a class="primitive" href="../primitive.tuple.html">)</a>;</span></code></div></div><code id="into_iter.v">fn <a href="../../std/iter/trait.IntoIterator.html#tymethod.into_iter" class="fnname">into_iter</a>(self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.Iter.html" title="struct std::collections::hash_map::Iter">Iter</a>&lt;'a, K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1688-1690" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-IntoIterator" class="impl"><code class="in-band">impl&lt;'a, K, V, S&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for &amp;'a <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-IntoIterator" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1683-1691" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-IntoIterator-1" class="impl"><code class="in-band">impl&lt;'a, K, V, S&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for &amp;'a mut <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-IntoIterator-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1694-1702" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	into_iter	into_iter	IntoIter<â€¦> ðŸ›ˆ	<h4 id="method.into_iter-1" class="method x"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;'a, K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.tuple.html">(</a><a class="primitive" href="../primitive.reference.html">&amp;'a </a>K, <a class="primitive" href="../primitive.reference.html">&amp;'a mut </a>V<a class="primitive" href="../primitive.tuple.html">)</a>;</span></code></div></div><code id="into_iter.v-1">fn <a href="../../std/iter/trait.IntoIterator.html#tymethod.into_iter" class="fnname">into_iter</a>(self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.IterMut.html" title="struct std::collections::hash_map::IterMut">IterMut</a>&lt;'a, K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1699-1701" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-IntoIterator-1" class="impl"><code class="in-band">impl&lt;'a, K, V, S&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for &amp;'a mut <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-IntoIterator-1" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1694-1702" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-IntoIterator-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-IntoIterator-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1705-1732" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	into_iter	into_iter	IntoIter<â€¦> ðŸ›ˆ	<h4 id="method.into_iter-2" class="method"><div class="important-traits"><div class="tooltip">â“˜<span class="tooltiptext">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.IntoIter.html" title="struct std::collections::hash_map::IntoIter">IntoIter</a>&lt;K, V&gt;</span></div><div class="content hidden"><h3 class="important">Important traits for <a class="struct" href="../../std/collections/hash_map/struct.IntoIter.html" title="struct std::collections::hash_map::IntoIter">IntoIter</a>&lt;K, V&gt;</h3><code class="content"><span class="where fmt-newline">impl&lt;K, V&gt; <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a> for <a class="struct" href="../../std/collections/hash_map/struct.IntoIter.html" title="struct std::collections::hash_map::IntoIter">IntoIter</a>&lt;K, V&gt;</span><span class="where fmt-newline">    type <a href="../../std/iter/trait.Iterator.html#associatedtype.Item" class="type">Item</a> = <a class="primitive" href="../primitive.tuple.html">(</a>K, V<a class="primitive" href="../primitive.tuple.html">)</a>;</span></code></div></div><code id="into_iter.v-2">fn <a href="../../std/iter/trait.IntoIterator.html#tymethod.into_iter" class="fnname">into_iter</a>(self) -&gt; <a class="struct" href="../../std/collections/hash_map/struct.IntoIter.html" title="struct std::collections::hash_map::IntoIter">IntoIter</a>&lt;K, V&gt;</code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1727-1731" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-IntoIterator-2" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;</code><a href="#impl-IntoIterator-2" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#1705-1732" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-IntoIterator-3" class="impl"><code class="in-band">impl&lt;I&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for I <span class="where fmt-newline">where<br>&nbsp;I: <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a>,&nbsp;</span></code><a href="#impl-IntoIterator-3" class="anchor"></a><a class="srclink" href="../../src/core/iter/traits/collect.rs.html#242-249" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	into_iter	into_iter	IntoIterator ðŸ›ˆ	<h4 id="method.into_iter-3" class="method x"><code id="into_iter.v-3">fn <a href="../../std/iter/trait.IntoIterator.html#tymethod.into_iter" class="fnname">into_iter</a>(self) -&gt; I</code><a class="srclink" href="../../src/core/iter/traits/collect.rs.html#246-248" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-IntoIterator-3" class="impl"><code class="in-band">impl&lt;I&gt; <a class="trait" href="../../std/iter/trait.IntoIterator.html" title="trait std::iter::IntoIterator">IntoIterator</a> for I <span class="where fmt-newline">where<br>&nbsp;I: <a class="trait" href="../../std/iter/trait.Iterator.html" title="trait std::iter::Iterator">Iterator</a>,&nbsp;</span></code><a href="#impl-IntoIterator-3" class="anchor"></a><a class="srclink" href="../../src/core/iter/traits/collect.rs.html#242-249" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-PartialEq%3CHashMap%3CK%2C%20V%2C%20S%3E%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/cmp/trait.PartialEq.html" title="trait std::cmp::PartialEq">PartialEq</a>&lt;<a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;V: <a class="trait" href="../../std/cmp/trait.PartialEq.html" title="trait std::cmp::PartialEq">PartialEq</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-PartialEq%3CHashMap%3CK%2C%20V%2C%20S%3E%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#975-989" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	eq	eq	PartialEq<â€¦> ðŸ›ˆ	<h4 id="method.eq" class="method x"><code id="eq.v">fn <a href="../../std/cmp/trait.PartialEq.html#tymethod.eq" class="fnname">eq</a>(&amp;self, other: &amp;<a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;) -&gt; <a class="primitive" href="../primitive.bool.html">bool</a></code><a class="srclink" href="../../src/std/collections/hash/map.rs.html#981-988" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-PartialEq%3CHashMap%3CK%2C%20V%2C%20S%3E%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/cmp/trait.PartialEq.html" title="trait std::cmp::PartialEq">PartialEq</a>&lt;<a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;V: <a class="trait" href="../../std/cmp/trait.PartialEq.html" title="trait std::cmp::PartialEq">PartialEq</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-PartialEq%3CHashMap%3CK%2C%20V%2C%20S%3E%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#975-989" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
I	ne	ne	PartialEq<â€¦> ðŸ›ˆ	<h4 id="method.ne" class="method"><code id="ne.v"><div class="toggle-wrapper toggle-attributes collapsed"><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">+</span>]<span class="toggle-label" style="display: inline-block;">&nbsp;Expand&nbsp;attributes</span></a></div><span class="docblock attributes hidden-by-usual-hider">#[must_use]</span>fn <a href="../../std/cmp/trait.PartialEq.html#method.ne" class="fnname">ne</a>(&amp;self, other: <a class="primitive" href="../primitive.reference.html">&amp;</a>Rhs) -&gt; <a class="primitive" href="../primitive.bool.html">bool</a></code><a class="srclink" href="../../src/core/cmp.rs.html#200" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-PartialEq%3CHashMap%3CK%2C%20V%2C%20S%3E%3E" class="impl"><code class="in-band">impl&lt;K, V, S&gt; <a class="trait" href="../../std/cmp/trait.PartialEq.html" title="trait std::cmp::PartialEq">PartialEq</a>&lt;<a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt;&gt; for <a class="struct" href="../../std/collections/struct.HashMap.html" title="struct std::collections::HashMap">HashMap</a>&lt;K, V, S&gt; <span class="where fmt-newline">where<br>&nbsp;K: <a class="trait" href="../../std/cmp/trait.Eq.html" title="trait std::cmp::Eq">Eq</a> + <a class="trait" href="../../std/hash/trait.Hash.html" title="trait std::hash::Hash">Hash</a>,<br>&nbsp;V: <a class="trait" href="../../std/cmp/trait.PartialEq.html" title="trait std::cmp::PartialEq">PartialEq</a>,<br>&nbsp;S: <a class="trait" href="../../std/hash/trait.BuildHasher.html" title="trait std::hash::BuildHasher">BuildHasher</a>,&nbsp;</span></code><a href="#impl-PartialEq%3CHashMap%3CK%2C%20V%2C%20S%3E%3E" class="anchor"></a><a class="srclink" href="../../src/std/collections/hash/map.rs.html#975-989" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-ToOwned" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.ToOwned.html" title="trait std::borrow::ToOwned">ToOwned</a> for T <span class="where fmt-newline">where<br>&nbsp;T: <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>,&nbsp;</span></code><a href="#impl-ToOwned" class="anchor"></a><a class="srclink" href="../../src/alloc/borrow.rs.html#81-92" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	clone_into	clone_into	ToOwned ðŸ›ˆ	<h4 id="method.clone_into" class="method x"><code id="clone_into.v">fn <a href="../../std/borrow/trait.ToOwned.html#method.clone_into" class="fnname">clone_into</a>(&amp;self, target: <a class="primitive" href="../primitive.reference.html">&amp;mut </a>T)</code><a class="srclink" href="../../src/alloc/borrow.rs.html#89-91" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-ToOwned" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.ToOwned.html" title="trait std::borrow::ToOwned">ToOwned</a> for T <span class="where fmt-newline">where<br>&nbsp;T: <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>,&nbsp;</span></code><a href="#impl-ToOwned" class="anchor"></a><a class="srclink" href="../../src/alloc/borrow.rs.html#81-92" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-ToOwned" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.ToOwned.html" title="trait std::borrow::ToOwned">ToOwned</a> for T <span class="where fmt-newline">where<br>&nbsp;T: <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>,&nbsp;</span></code><a href="#impl-ToOwned" class="anchor"></a><a class="srclink" href="../../src/alloc/borrow.rs.html#81-92" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	to_owned	to_owned	ToOwned<â€¦> ðŸ›ˆ	<h4 id="method.to_owned" class="method x"><code id="to_owned.v">fn <a href="../../std/borrow/trait.ToOwned.html#tymethod.to_owned" class="fnname">to_owned</a>(&amp;self) -&gt; T</code><a class="srclink" href="../../src/alloc/borrow.rs.html#85-87" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-ToOwned" class="impl"><code class="in-band">impl&lt;T&gt; <a class="trait" href="../../std/borrow/trait.ToOwned.html" title="trait std::borrow::ToOwned">ToOwned</a> for T <span class="where fmt-newline">where<br>&nbsp;T: <a class="trait" href="../../std/clone/trait.Clone.html" title="trait std::clone::Clone">Clone</a>,&nbsp;</span></code><a href="#impl-ToOwned" class="anchor"></a><a class="srclink" href="../../src/alloc/borrow.rs.html#81-92" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-TryFrom%3CU%3E" class="impl"><code class="in-band">impl&lt;T, U&gt; <a class="trait" href="../../std/convert/trait.TryFrom.html" title="trait std::convert::TryFrom">TryFrom</a>&lt;U&gt; for T <span class="where fmt-newline">where<br>&nbsp;U: <a class="trait" href="../../std/convert/trait.Into.html" title="trait std::convert::Into">Into</a>&lt;T&gt;,&nbsp;</span></code><a href="#impl-TryFrom%3CU%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#571-577" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	try_from	try_from	TryFrom<â€¦> ðŸ›ˆ	<h4 id="method.try_from" class="method x"><code id="try_from.v">fn <a href="../../std/convert/trait.TryFrom.html#tymethod.try_from" class="fnname">try_from</a>(value: U) -&gt; <a class="enum" href="../../std/result/enum.Result.html" title="enum std::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="../../std/convert/trait.TryFrom.html" title="trait std::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="type" href="../../std/convert/trait.TryFrom.html#associatedtype.Error" title="type std::convert::TryFrom::Error">Error</a>&gt;</code><a class="srclink" href="../../src/core/convert.rs.html#574-576" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-TryFrom%3CU%3E" class="impl"><code class="in-band">impl&lt;T, U&gt; <a class="trait" href="../../std/convert/trait.TryFrom.html" title="trait std::convert::TryFrom">TryFrom</a>&lt;U&gt; for T <span class="where fmt-newline">where<br>&nbsp;U: <a class="trait" href="../../std/convert/trait.Into.html" title="trait std::convert::Into">Into</a>&lt;T&gt;,&nbsp;</span></code><a href="#impl-TryFrom%3CU%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#571-577" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
E	<h3 id="impl-TryInto%3CU%3E" class="impl"><code class="in-band">impl&lt;T, U&gt; <a class="trait" href="../../std/convert/trait.TryInto.html" title="trait std::convert::TryInto">TryInto</a>&lt;U&gt; for T <span class="where fmt-newline">where<br>&nbsp;U: <a class="trait" href="../../std/convert/trait.TryFrom.html" title="trait std::convert::TryFrom">TryFrom</a>&lt;T&gt;,&nbsp;</span></code><a href="#impl-TryInto%3CU%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#559-566" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>				
I	try_into	try_into	TryInto<â€¦> ðŸ›ˆ	<h4 id="method.try_into" class="method x"><code id="try_into.v">fn <a href="../../std/convert/trait.TryInto.html#tymethod.try_into" class="fnname">try_into</a>(self) -&gt; <a class="enum" href="../../std/result/enum.Result.html" title="enum std::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="../../std/convert/trait.TryFrom.html" title="trait std::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="type" href="../../std/convert/trait.TryFrom.html#associatedtype.Error" title="type std::convert::TryFrom::Error">Error</a>&gt;</code><a class="srclink" href="../../src/core/convert.rs.html#563-565" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h4>	<h3 id="impl-TryInto%3CU%3E" class="impl"><code class="in-band">impl&lt;T, U&gt; <a class="trait" href="../../std/convert/trait.TryInto.html" title="trait std::convert::TryInto">TryInto</a>&lt;U&gt; for T <span class="where fmt-newline">where<br>&nbsp;U: <a class="trait" href="../../std/convert/trait.TryFrom.html" title="trait std::convert::TryFrom">TryFrom</a>&lt;T&gt;,&nbsp;</span></code><a href="#impl-TryInto%3CU%3E" class="anchor"></a><a class="srclink" href="../../src/core/convert.rs.html#559-566" title="goto source code">[src]</a><a href="javascript:void(0)" class="collapse-toggle">[<span class="inner">âˆ’</span>]</a></h3>
